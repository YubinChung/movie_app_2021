{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQA8BeA,MA1Bf,YAA0D,EAA1CC,GAA2C,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAChD,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKH,EAAQI,IAAKN,IACvB,sBAAKI,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SACGD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OAAkB,6BAAiBD,GAARC,QAEzC,mBAAGL,UAAU,iBAAb,SAA+BH,WC2GxBS,G,kNApEbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAsBVC,U,sBAAY,8BAAAC,EAAA,sEAI8BC,IAAMC,IAAI,4DAJxC,gBAIYJ,EAJZ,EAIHK,KAAQA,KAAOL,OAItB,EAAKM,SAAS,CAAEN,SAAQD,WAAU,IARxB,2C,4CAnBZ,WAAS,IAAD,EACsBQ,KAAKT,MAA1BC,EADD,EACCA,UAAWC,EADZ,EACYA,OAClB,OACE,yBAAST,UAAU,YAAnB,SACGQ,EACD,qBAAKR,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGS,EAAON,KAAI,SAAAc,GACV,OAAO,cAAC,EAAD,CAAsBvB,GAAIuB,EAAMvB,GAAIC,KAAMsB,EAAMtB,KAAMC,MAAOqB,EAAMrB,MAAOC,QAASoB,EAAMpB,QAASC,OAAQmB,EAAMC,mBAAoBnB,OAAQkB,EAAMlB,QAAtIkB,EAAMvB,a,+BAmBnC,WAKEsB,KAAKN,gB,GAzCSS,IAAMC,YChDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.61d5c96c.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n\nfunction Movie({id, year, title, summary, poster, genres}){\n  return (\n    <div className=\"movie\">\n      <img src={poster} alt={title} />\n      <div className=\"movie__data\">\n        <h3 className=\"movie__title\">{title}</h3>\n        <h5 className=\"movie__year\">{year}</h5>\n        <ul className=\"movie__genres\">\n          {genres.map((genre, index) => <li key={index}>{genre}</li>)}\n        </ul>\n        <p className=\"movie__summary\">{summary}</p>\n      </div>\n    </div>\n  )\n}\n\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  year: PropTypes.number.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired\n}\n\n\nexport default Movie;","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n// import PropTypes from \"prop-types\";\n\n\n// function Food({name, image, rating}) {\n//   return (\n//     <div>\n//       I like {name} ({image}) / Rating: {rating}\n//     </div>\n//   )\n// }\n\n// // Props check\n// Food.propTypes = {\n//   name: PropTypes.string.isRequired,\n//   image: PropTypes.string.isRequired,\n//   rating: PropTypes.number // number OR undefined\n// }\n\n\n\n// const foodILike = [\n//   {\n//     id:1,\n//     name:\"Kim1\",\n//     image:\"image1.png\",\n//     rating: 5\n//   },\n//   {\n//     id:2,\n//     name:\"Kim2\",\n//     image:\"image2.png\",\n//     rating: 3.3\n//   }\n// ]\n\n\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       asdf\n//       {foodILike.map(food => <Food key={food.id} name={food.name} image={food.image} rating={food.rating} /> )}\n//     </div>\n     \n//   );\n// }\n\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  }\n\n  render(){\n    const {isLoading, movies} = this.state; // 비구조화할당 이라는 것 \n    return (\n      <section className=\"container\">\n        {isLoading ? (\n        <div className=\"loader\">\n          <span className=\"loader__text\">Loading...</span>\n        </div>\n      ) : (\n        <div className=\"movies\">\n          {movies.map(movie => {\n            return <Movie key={movie.id} id={movie.id} year={movie.year} title={movie.title} summary={movie.summary} poster={movie.medium_cover_image} genres={movie.genres} />\n          })}\n        </div>\n      )}\n      </section>\n    )\n  }\n\n  getMovies = async() => {\n    //const movies = await axios.get(\"http://yts-proxy.now.sh/list_movies.json\");\n    // movies.data.data.movies => NOT SEXY\n\n    const {data: { data: {movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"); \n    // console.log(movies)\n\n    // this.state.setState({ movies: movies}) NOT SEXY\n    this.setState({ movies, isLoading:false })\n    \n  }\n  componentDidMount() {\n    // setTimeout(() => {\n    //   this.setState( {isLoading: false})\n    // }, 6000)\n\n    this.getMovies();\n    //\n  }\n\n  // state = {\n  //   count: 0\n  // }\n\n  // add = () => {\n  //   // this.setState({count: this.state.count + 1}) // 추천하지 않는 코드 \n  //   this.setState( current => ({\n  //     count: current.count + 1\n  //   }))\n  // }\n  // minus = () => {\n  //   this.setState({count: this.state.count - 1})\n  // }\n\n  // render(){\n  //   return (<div>\n  //       <h1>The number is {this.state.count}</h1>\n  //       <button onClick={this.add}>Add</button>\n  //       <button onClick={this.minus}>Minus</button>\n  //     </div>)\n  // }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}